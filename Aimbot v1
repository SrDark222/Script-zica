local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Camera = workspace.CurrentCamera
local localPlayer = Players.LocalPlayer

local modoAtual = "FFA"
local alvoAtual = nil
local semPredict = false
local tempoLimpo = tick()
local tempoProximo = math.random(60, 300)

-- GUI
local screenGui = Instance.new("ScreenGui", game.CoreGui)
screenGui.ResetOnSpawn = false

local toggle = Instance.new("TextButton")
toggle.Size = UDim2.new(0, 160, 0, 50)
toggle.Position = UDim2.new(0, 80, 0, 100)
toggle.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
toggle.Text = "Mode: FFA"
toggle.TextColor3 = Color3.fromRGB(255, 255, 255)
toggle.Font = Enum.Font.GothamMedium
toggle.TextScaled = true
toggle.Draggable = true
toggle.AutoButtonColor = false
toggle.Parent = screenGui

Instance.new("UICorner", toggle).CornerRadius = UDim.new(0, 6)

local cabecalho = Instance.new("TextLabel", toggle)
cabecalho.Size = UDim2.new(1, 0, 0.3, 0)
cabecalho.Position = UDim2.new(0, 0, -0.35, 0)
cabecalho.BackgroundTransparency = 1
cabecalho.Text = "Aimbot Legit v1 (By dkzin)"
cabecalho.Font = Enum.Font.Gotham
cabecalho.TextColor3 = Color3.fromRGB(255, 255, 255)
cabecalho.TextScaled = true

toggle.MouseButton1Click:Connect(function()
	if modoAtual == "FFA" then
		modoAtual = "ENEMY"
		toggle.Text = "Modo: Time"
	elseif modoAtual == "ENEMY" then
		modoAtual = "OFF"
		toggle.Text = "Modo: Desligado"
	elseif modoAtual == "OFF" then
		modoAtual = "FFA"
		toggle.Text = "Modo: FFA"
	end
end)

-- Parte visível com raycast legit
local function parteValida(char)
	for _, nome in ipairs({"Head", "HumanoidRootPart"}) do
		local p = char:FindFirstChild(nome)
		if p then
			local _, visivel = Camera:WorldToViewportPoint(p.Position)
			if visivel then
				local params = RaycastParams.new()
				params.FilterType = Enum.RaycastFilterType.Blacklist
				params.FilterDescendantsInstances = {localPlayer.Character, Camera}
				local hit = workspace:Raycast(Camera.CFrame.Position, (p.Position - Camera.CFrame.Position).Unit * 999, params)
				if not hit or hit.Instance:IsDescendantOf(char) then
					return p
				end
			end
		end
	end
end

-- Detecta quem tem force field
local function getForceFields()
	local map = {}
	for _, ff in ipairs(workspace:GetDescendants()) do
		if ff:IsA("ForceField") then
			local model = ff:FindFirstAncestorOfClass("Model")
			if model then
				local dono = Players:GetPlayerFromCharacter(model)
				if dono then
					map[dono] = true
				end
			end
		end
	end
	return map
end

-- Permissão para mirar
local function podeMirar(p, block)
	if p == localPlayer then return false end
	if not p.Character or not p.Character:FindFirstChild("Humanoid") then return false end
	if p.Character.Humanoid.Health <= 0 then return false end
	if block[p] then return false end
	if modoAtual == "OFF" then return false end
	if modoAtual == "ENEMY" and p.Team == localPlayer.Team then return false end
	return true
end

-- Predict avançado
local function predict(part, dist, dt)
	if semPredict or dist <= 25 then return part.Position end
	local hrp = part.Parent:FindFirstChild("HumanoidRootPart")
	if not hrp then return part.Position end
	local vel = hrp.Velocity
	local delay = math.clamp(dist / 850, 0.01, 0.1)
	return part.Position + (vel * delay * (dt * 60))
end

-- Mira suave com força adaptativa
local function miraSuave(origem, destino, dist)
	local peso = 0.10
	if dist <= 15 then
		peso = 0.6
	elseif dist <= 25 then
		peso = 0.35
	elseif dist <= 40 then
		peso = 0.2
	end
	return Camera.CFrame.LookVector:Lerp((destino - origem).Unit, peso)
end

-- Loop principal
RunService.RenderStepped:Connect(function(dt)
	if modoAtual == "OFF" then alvoAtual = nil return end

	-- burst de mira sem predict
	if tick() - tempoLimpo > tempoProximo then
		semPredict = true
		task.delay(10, function()
			semPredict = false
			tempoLimpo = tick()
			tempoProximo = math.random(60, 300)
		end)
	end

	local forceBlock = getForceFields()
	local menorDist = math.huge
	local melhorParte = nil

	for _, p in ipairs(Players:GetPlayers()) do
		if podeMirar(p, forceBlock) then
			local parte = parteValida(p.Character)
			if parte then
				local dist = (Camera.CFrame.Position - parte.Position).Magnitude
				if dist < menorDist then
					melhorParte = parte
					menorDist = dist
				end
			end
		end
	end

	alvoAtual = melhorParte
	if alvoAtual then
		local origem = Camera.CFrame.Position
		local destino = predict(alvoAtual, menorDist, dt)
		local novo = miraSuave(origem, destino, menorDist)
		Camera.CFrame = CFrame.new(origem, origem + novo)
	end
end)
